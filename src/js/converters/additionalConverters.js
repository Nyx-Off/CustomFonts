/**
 * Convertisseurs additionnels pour des styles sp√©ciaux
 */

export const additionalConverters = [
    {
        name: "Underline",
        convert: (text) => {
            return text.split('').join('Ã≤') + 'Ã≤';
        }
    },
    
    {
        name: "Strikethrough",
        convert: (text) => {
            return text.split('').join('Ã∂') + 'Ã∂';
        }
    },
    
    {
        name: "Double Underline",
        convert: (text) => {
            return text.split('').join('Ã≥') + 'Ã≥';
        }
    },
    
    {
        name: "Overline",
        convert: (text) => {
            return text.split('').join('ÃÖ') + 'ÃÖ';
        }
    },
    
    {
        name: "Leet Speak",
        convert: (text) => {
            const leetMap = {
                'a': '4', 'A': '4',
                'e': '3', 'E': '3',
                'i': '1', 'I': '1',
                'o': '0', 'O': '0',
                'u': '(_)', 'U': '(_)',
                'l': '|', 'L': '|',
                's': '5', 'S': '5',
                't': '7', 'T': '7',
                'g': '9', 'G': '9',
                'b': '8', 'B': '8',
                'z': '2', 'Z': '2'
            };
            
            return text.split('').map(char => leetMap[char] || char).join('');
        }
    },
    
    {
        name: "Reverse",
        convert: (text) => {
            const reverseMap = {
                'a': '…ê', 'b': 'q', 'c': '…î', 'd': 'p', 'e': '«ù', 'f': '…ü', 'g': '∆É', 'h': '…•',
                'i': 'ƒ±', 'j': '…æ', 'k': ' û', 'l': '◊ü', 'm': '…Ø', 'n': 'u', 'o': 'o', 'p': 'd',
                'q': 'b', 'r': '…π', 's': 's', 't': ' á', 'u': 'n', 'v': ' å', 'w': ' ç', 'x': 'x',
                'y': ' é', 'z': 'z',
                'A': '‚àÄ', 'B': '·ó∫', 'C': '∆Ü', 'D': '·ó°', 'E': '∆é', 'F': '‚Ñ≤', 'G': '‚ÖÅ',
                'H': 'H', 'I': 'I', 'J': '≈ø', 'K': '‚ãä', 'L': '‚ÖÇ', 'M': 'W', 'N': 'N',
                'O': 'O', 'P': '‘Ä', 'Q': 'Œå', 'R': '·¥ö', 'S': 'S', 'T': '‚ä•', 'U': '‚à©',
                'V': 'Œõ', 'W': 'M', 'X': 'X', 'Y': '‚ÖÑ', 'Z': 'Z'
            };
            
            return text.split('').map(char => reverseMap[char] || char).reverse().join('');
        }
    },
    
    {
        name: "Bubble Text",
        convert: (text) => {
            const bubbleMap = {
                'a': '‚ìê', 'b': '‚ìë', 'c': '‚ìí', 'd': '‚ìì', 'e': '‚ìî', 'f': '‚ìï', 'g': '‚ìñ',
                'h': '‚ìó', 'i': '‚ìò', 'j': '‚ìô', 'k': '‚ìö', 'l': '‚ìõ', 'm': '‚ìú', 'n': '‚ìù',
                'o': '‚ìû', 'p': '‚ìü', 'q': '‚ì†', 'r': '‚ì°', 's': '‚ì¢', 't': '‚ì£', 'u': '‚ì§',
                'v': '‚ì•', 'w': '‚ì¶', 'x': '‚ìß', 'y': '‚ì®', 'z': '‚ì©',
                'A': '‚í∂', 'B': '‚í∑', 'C': '‚í∏', 'D': '‚íπ', 'E': '‚í∫', 'F': '‚íª', 'G': '‚íº',
                'H': '‚íΩ', 'I': '‚íæ', 'J': '‚íø', 'K': '‚ìÄ', 'L': '‚ìÅ', 'M': '‚ìÇ', 'N': '‚ìÉ',
                'O': '‚ìÑ', 'P': '‚ìÖ', 'Q': '‚ìÜ', 'R': '‚ìá', 'S': '‚ìà', 'T': '‚ìâ', 'U': '‚ìä',
                'V': '‚ìã', 'W': '‚ìå', 'X': '‚ìç', 'Y': '‚ìé', 'Z': '‚ìè',
                '0': '‚ì™', '1': '‚ë†', '2': '‚ë°', '3': '‚ë¢', '4': '‚ë£',
                '5': '‚ë§', '6': '‚ë•', '7': '‚ë¶', '8': '‚ëß', '9': '‚ë®'
            };
            
            return text.split('').map(char => bubbleMap[char] || char).join('');
        }
    },
    
    {
        name: "Fullwidth",
        convert: (text) => {
            return text.split('').map(char => {
                const code = char.charCodeAt(0);
                // Convertir les caract√®res ASCII en fullwidth
                if (code >= 33 && code <= 126) {
                    return String.fromCharCode(code + 0xFEE0);
                }
                // Espace
                if (code === 32) {
                    return String.fromCharCode(0x3000);
                }
                return char;
            }).join('');
        }
    },
    
    {
        name: "Zalgo",
        convert: (text) => {
            const zalgoUp = ['Ãç', 'Ãé', 'ÃÑ', 'ÃÖ', 'Ãø', 'Ãë', 'ÃÜ', 'Ãê', 'Õí', 'Õó', 'Õë', 'Ãá', 'Ãà', 'Ãä', 'ÕÇ', 'Ãì', 'ÃàÃÅ', 'Õä', 'Õã', 'Õå', 'ÃÉ', 'ÃÇ', 'Ãå', 'Õê', 'ÃÄ', 'ÃÅ', 'Ãã', 'Ãè', 'Ãí', 'Ãì', 'Ãî', 'ÃΩ', 'Ãâ', 'Õ£', 'Õ§', 'Õ•', 'Õ¶', 'Õß', 'Õ®', 'Õ©', 'Õ™', 'Õ´', 'Õ¨', 'Õ≠', 'ÕÆ', 'ÕØ', 'Ãæ', 'Õõ', 'ÕÜ', 'Ãö'];
            const zalgoDown = ['Ãñ', 'Ãó', 'Ãò', 'Ãô', 'Ãú', 'Ãù', 'Ãû', 'Ãü', 'Ã†', 'Ã§', 'Ã•', 'Ã¶', 'Ã©', 'Ã™', 'Ã´', 'Ã¨', 'Ã≠', 'ÃÆ', 'ÃØ', 'Ã∞', 'Ã±', 'Ã≤', 'Ã≥', 'Ãπ', 'Ã∫', 'Ãª', 'Ãº', 'ÕÖ', 'Õá', 'Õà', 'Õâ', 'Õç', 'Õé', 'Õì', 'Õî', 'Õï', 'Õñ', 'Õô', 'Õö', 'Ã£'];
            const zalgoMid = ['Ãï', 'Ãõ', 'ÃÄ', 'ÃÅ', 'Õò', 'Ã°', 'Ã¢', 'Ãß', 'Ã®', 'Ã¥', 'Ãµ', 'Ã∂', 'Õú', 'Õù', 'Õû', 'Õü', 'Õ†', 'Õ¢', 'Ã∏', 'Ã∑', 'Õ°'];
            
            return text.split('').map(char => {
                if (char === ' ') return char;
                
                let result = char;
                const intensity = 3; // Intensit√© du zalgo (1-10)
                
                // Ajouter des caract√®res zalgo al√©atoires
                for (let i = 0; i < intensity; i++) {
                    if (Math.random() < 0.5) {
                        result += zalgoUp[Math.floor(Math.random() * zalgoUp.length)];
                    }
                    if (Math.random() < 0.5) {
                        result += zalgoDown[Math.floor(Math.random() * zalgoDown.length)];
                    }
                    if (Math.random() < 0.5) {
                        result += zalgoMid[Math.floor(Math.random() * zalgoMid.length)];
                    }
                }
                
                return result;
            }).join('');
        }
    },
    
    {
        name: "Square",
        convert: (text) => {
            const squareMap = {
                'a': 'üÑ∞', 'b': 'üÑ±', 'c': 'üÑ≤', 'd': 'üÑ≥', 'e': 'üÑ¥', 'f': 'üÑµ', 'g': 'üÑ∂',
                'h': 'üÑ∑', 'i': 'üÑ∏', 'j': 'üÑπ', 'k': 'üÑ∫', 'l': 'üÑª', 'm': 'üÑº', 'n': 'üÑΩ',
                'o': 'üÑæ', 'p': 'üÑø', 'q': 'üÖÄ', 'r': 'üÖÅ', 's': 'üÖÇ', 't': 'üÖÉ', 'u': 'üÖÑ',
                'v': 'üÖÖ', 'w': 'üÖÜ', 'x': 'üÖá', 'y': 'üÖà', 'z': 'üÖâ',
                'A': 'üÑ∞', 'B': 'üÑ±', 'C': 'üÑ≤', 'D': 'üÑ≥', 'E': 'üÑ¥', 'F': 'üÑµ', 'G': 'üÑ∂',
                'H': 'üÑ∑', 'I': 'üÑ∏', 'J': 'üÑπ', 'K': 'üÑ∫', 'L': 'üÑª', 'M': 'üÑº', 'N': 'üÑΩ',
                'O': 'üÑæ', 'P': 'üÑø', 'Q': 'üÖÄ', 'R': 'üÖÅ', 'S': 'üÖÇ', 'T': 'üÖÉ', 'U': 'üÖÑ',
                'V': 'üÖÖ', 'W': 'üÖÜ', 'X': 'üÖá', 'Y': 'üÖà', 'Z': 'üÖâ'
            };
            
            return text.split('').map(char => squareMap[char] || char).join('');
        }
    }
];